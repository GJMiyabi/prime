generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Person {               
  id        String   @id @default(uuid())
  name      String
  contacts  ContactAddress[]
  principal Principal?
  facilities Facility[]
  organizationId String?
  organization   Organization? @relation(fields: [organizationId], references: [id])
  @@index([organizationId])
}

model Facility {
  id      String  @id @default(uuid())
  name    String
  IDNumber String
  organizationId String?
  organization   Organization? @relation(fields: [organizationId], references: [id])
  persons Person[]
  contactAddress ContactAddress[]
  @@index([organizationId])
}

model Organization {
  id      String  @id @default(uuid())
  name    String
  IDNumber String
  persons Person[]
  facilities Facility[]
  contactAddress ContactAddress[]
}

model ContactAddress {
  id       String  @id @default(uuid())
  personId       String?      
  person         Person?      @relation(fields: [personId], references: [id])
  type     ContactType
  value    String
  organizationId String?
  organization   Organization? @relation(fields: [organizationId], references: [id])
  facilityId String?
  facility   Facility? @relation(fields: [facilityId], references: [id])
  @@index([organizationId])
  @@index([facilityId])
}

enum ContactType { 
  EMAIL 
  PHONE 
  ADDRESS
}

model Principal {
  id        String   @id @default(uuid())
  personId  String   @unique
  person    Person   @relation(fields: [personId], references: [id])
  kind      PrincipalKind // ADMIN/TEACHER/STUDENT/STAKEHOLDER など

  account   Account?
}

enum PrincipalKind { 
  ADMIN 
  TEACHER
  STUDENT
  STAKEHOLDER
}

/// ログイン資格情報（任意）
model Account {
  id           String    @id @default(uuid())
  principalId  String    @unique
  principal    Principal @relation(fields: [principalId], references: [id])

  username     String    @unique
  password     String    // ハッシュ
  provider     String    @default("auth0")   
  providerSub  String?    @unique             
  email        String?                        
  isActive     Boolean   @default(true)

  // 監査/同期補助（任意）
  lastLoginAt  DateTime?
}
